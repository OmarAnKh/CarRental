// <auto-generated />
using System;
using CarRentalDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalDB.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20250520193059_FixTheTypo")]
    partial class FixTheTypo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRentalModels.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Color = "Red",
                            Model = "Toyota Corolla",
                            PlateNumber = "ABC123"
                        },
                        new
                        {
                            CarId = 2,
                            Color = "Blue",
                            Model = "Honda Civic",
                            PlateNumber = "XYZ789"
                        },
                        new
                        {
                            CarId = 3,
                            Color = "Black",
                            Model = "Ford Mustang",
                            PlateNumber = "LMN456"
                        },
                        new
                        {
                            CarId = 4,
                            Color = "White",
                            Model = "Chevrolet Malibu",
                            PlateNumber = "JKL321"
                        },
                        new
                        {
                            CarId = 5,
                            Color = "Silver",
                            Model = "Nissan Altima",
                            PlateNumber = "DEF654"
                        });
                });

            modelBuilder.Entity("CarRentalModels.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RentId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Rents");

                    b.HasData(
                        new
                        {
                            RentId = 1,
                            CarId = 1,
                            RentDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            RentId = 2,
                            CarId = 2,
                            RentDate = new DateTime(2024, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            RentId = 3,
                            CarId = 3,
                            RentDate = new DateTime(2024, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            RentId = 4,
                            CarId = 4,
                            RentDate = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            RentId = 5,
                            CarId = 5,
                            RentDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("CarRentalModels.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Main St",
                            Address2 = "Apt 1",
                            City = "New York",
                            County = "NY",
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            LicenseNumber = "NY123456",
                            Password = "hashedpwd1",
                            PhoneNumber = "1234567890",
                            Role = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 Broadway",
                            Address2 = "Nablus",
                            City = "Chicago",
                            County = "IL",
                            DateOfBirth = new DateTime(1985, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            LicenseNumber = "IL789456",
                            Password = "hashedpwd2",
                            PhoneNumber = "0987654321",
                            Role = 1
                        },
                        new
                        {
                            UserId = 3,
                            Address = "789 Sunset Blvd",
                            Address2 = "Ramallah",
                            City = "Los Angeles",
                            County = "CA",
                            DateOfBirth = new DateTime(1992, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali.khan@example.com",
                            FirstName = "Ali",
                            LastName = "Khan",
                            LicenseNumber = "CA456789",
                            Password = "hashedpwd3",
                            PhoneNumber = "5551112233",
                            Role = 2
                        },
                        new
                        {
                            UserId = 4,
                            Address = "321 Palm Ave",
                            Address2 = "Suite 10",
                            City = "Miami",
                            County = "FL",
                            DateOfBirth = new DateTime(1995, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.lee@example.com",
                            FirstName = "Sara",
                            LastName = "Lee",
                            LicenseNumber = "FL112233",
                            Password = "hashedpwd4",
                            PhoneNumber = "4445556666",
                            Role = 1
                        },
                        new
                        {
                            UserId = 5,
                            Address = "101 Desert Rd",
                            Address2 = "IDk",
                            City = "Phoenix",
                            County = "AZ",
                            DateOfBirth = new DateTime(1988, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohammed.zayed@example.com",
                            FirstName = "Mohammed",
                            LastName = "Zayed",
                            LicenseNumber = "AZ778899",
                            Password = "hashedpwd5",
                            PhoneNumber = "3334445555",
                            Role = 1
                        });
                });

            modelBuilder.Entity("CarRentalModels.Models.Rent", b =>
                {
                    b.HasOne("CarRentalModels.Models.Car", "Car")
                        .WithMany("Rents")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalModels.Models.User", "User")
                        .WithMany("Rents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRentalModels.Models.Car", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("CarRentalModels.Models.User", b =>
                {
                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
